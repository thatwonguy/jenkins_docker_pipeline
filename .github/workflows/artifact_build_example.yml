name: Docker CI/CD Pipeline with Artifacts

on:
  push:
    branches:
      - master  # Runs when code is pushed to the 'master' branch

jobs:
  build-artifact:
    runs-on: ubuntu-latest  # Uses GitHub's latest Ubuntu runner

    steps:
      - name: 🛎️ Checkout Repository  # Step 1: Clone the GitHub repository
        uses: actions/checkout@v4  

      - name: 🏗️ Build Python Application Artifact  # Step 2: Package app as an artifact
        run: |
          mkdir -p artifact_dir
          cp -r app.py requirements.txt Dockerfile artifact_dir/  # Copy relevant files
          tar -czvf artifact.tar.gz -C artifact_dir .  # Create a compressed archive

      - name: 📤 Upload Build Artifact  # Step 3: Store artifact in GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: python-app-artifact  # Name of the artifact
          path: artifact.tar.gz  # Path of the artifact to store
          retention-days: 5  # Retain artifact for 5 days

  deploy-container:
    needs: build-artifact  # Runs after artifact is built
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Download Artifact  # Step 4: Retrieve artifact from previous job
        uses: actions/download-artifact@v4
        with:
          name: python-app-artifact  # Name of the artifact to download

      - name: 🐳 Set Up Docker Buildx  # Step 5: Enable Buildx for better caching and multi-platform support
        uses: docker/setup-buildx-action@v2  

      - name: 🔑 Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2  
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: 🏗️ Build and Tag Docker Image  # Step 6: Build Docker image using artifact files
        run: |
          tar -xzvf artifact.tar.gz  # Extract artifact
          docker build --no-cache -t ghcr.io/${{ github.repository_owner }}/python-docker-jenkins:latest .

      - name: 📤 Push Image to GitHub Container Registry  # Step 7: Push the Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/python-docker-jenkins:latest

      - name: 🚀 Deploy Container  # Step 8: Run the Docker container
        run: |
          docker stop python-container || true
          docker rm python-container || true
          docker run -d -p 8080:8080 --name python-container ghcr.io/${{ github.repository_owner }}/python-docker-jenkins:latest
